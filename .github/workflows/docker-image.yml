name: Docker Image CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag my-image-name:$(date +%s)

      - name: Push Docker image to Docker Hub
        run: |
          docker tag my-image-name:$(date +%s) ${{ secrets.DOCKER_HUB_USERNAME }}/my-image-name:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-image-name:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.2.0
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_SSH_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest Docker image on EC2
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/my-image-name:latest
            # Stop and remove the old container (if any)
            docker stop my-container || true
            docker rm my-container || true
            # Run the new container
            docker run -d --name my-container -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/my-image-name:latest

